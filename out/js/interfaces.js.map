{"version":3,"sources":["js/interfaces.ts"],"names":[],"mappings":";;AAAA;;;gGAGgG;AAChG,gCAA8C;AAE9C,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IACxB,yDAAK,CAAA;IACL,6EAAe,CAAA;IACf,+EAAgB,CAAA;AACpB,CAAC,EAJW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAI3B;AASD,IAAY,gBAEX;AAFD,WAAY,gBAAgB;IACxB,yEAAa,CAAA;AACjB,CAAC,EAFW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAE3B;AAUD;IAAA;QACY,gBAAW,GAAY,KAAK,CAAC;QAC7B,cAAS,GAAiB,IAAI,YAAO,EAAO,CAAC;IAczD,CAAC;IAZG,MAAM;QACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAED,IAAI,UAAU;QACV,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,IAAI,QAAQ;QACR,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;CACJ;AAhBD,8CAgBC","file":"interfaces.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Observable, Subject } from 'rxjs/Rx';\r\n\r\nexport enum NotificationType {\r\n    Error,\r\n    UpdateAvailable,\r\n    UpdateDownloaded\r\n}\r\n\r\nexport interface ISelectionRange {\r\n    startRow: number;\r\n    endRow: number;\r\n    startColumn: number;\r\n    endColumn: number;\r\n}\r\n\r\nexport enum CollectionChange {\r\n    ItemsReplaced\r\n}\r\n\r\nexport interface IObservableCollection<T> {\r\n    getLength(): number;\r\n    at(index: number): T;\r\n    getRange(start: number, end: number): T[];\r\n    setCollectionChangedCallback(callback: (change: CollectionChange, startIndex: number, count: number) => void): void;\r\n    resetWindowsAroundIndex(index: number): void;\r\n}\r\n\r\nexport class CancellationToken {\r\n    private _isCanceled: boolean = false;\r\n    private _canceled: Subject<any> = new Subject<any>();\r\n\r\n    cancel(): void {\r\n        this._isCanceled = true;\r\n        this._canceled.next(undefined);\r\n    }\r\n\r\n    get isCanceled(): boolean {\r\n        return this._isCanceled;\r\n    }\r\n\r\n    get canceled(): Observable<any> {\r\n        return this._canceled;\r\n    }\r\n}\r\n\r\nexport interface IGridColumnDefinition {\r\n    id: string;\r\n    type: number;\r\n}\r\n\r\nexport interface ISlickColumn<T> extends Slick.Column<T> {\r\n    isEditable?: boolean;\r\n}\r\n"]}