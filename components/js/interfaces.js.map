{"version":3,"sources":["js/interfaces.ts"],"names":[],"mappings":";;AAAA;;;gGAGgG;AAChG,gCAA8C;AAE9C,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IACxB,yDAAK,CAAA;IACL,6EAAe,CAAA;IACf,+EAAgB,CAAA;AACpB,CAAC,EAJW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAI3B;AASD,IAAY,gBAEX;AAFD,WAAY,gBAAgB;IACxB,yEAAa,CAAA;AACjB,CAAC,EAFW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAE3B;AASD;IAAA;QACY,gBAAW,GAAY,KAAK,CAAC;QAC7B,cAAS,GAAiB,IAAI,YAAO,EAAO,CAAC;IAczD,CAAC;IAZG,MAAM;QACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAED,IAAI,UAAU;QACV,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,IAAI,QAAQ;QACR,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;CACJ;AAhBD,8CAgBC;AAED,IAAY,SAOX;AAPD,WAAY,SAAS;IACjB,6CAAU,CAAA;IACV,+CAAW,CAAA;IACX,+CAAW,CAAA;IACX,+CAAW,CAAA;IACX,yCAAQ,CAAA;IACR,+CAAW,CAAA;AACf,CAAC,EAPW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAOpB","file":"interfaces.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Observable, Subject } from 'rxjs/Rx';\n\nexport enum NotificationType {\n    Error,\n    UpdateAvailable,\n    UpdateDownloaded\n}\n\nexport interface ISelectionRange {\n    startRow: number;\n    endRow: number;\n    startColumn: number;\n    endColumn: number;\n}\n\nexport enum CollectionChange {\n    ItemsReplaced\n}\n\nexport interface IObservableCollection<T> {\n    getLength(): number;\n    at(index: number): T;\n    getRange(start: number, end: number): T[];\n    setCollectionChangedCallback(callback: (change: CollectionChange, startIndex: number, count: number) => void): void;\n}\n\nexport class CancellationToken {\n    private _isCanceled: boolean = false;\n    private _canceled: Subject<any> = new Subject<any>();\n\n    cancel(): void {\n        this._isCanceled = true;\n        this._canceled.next(undefined);\n    }\n\n    get isCanceled(): boolean {\n        return this._isCanceled;\n    }\n\n    get canceled(): Observable<any> {\n        return this._canceled;\n    }\n}\n\nexport enum FieldType {\n    String = 0,\n    Boolean = 1,\n    Integer = 2,\n    Decimal = 3,\n    Date = 4,\n    Unknown = 5\n}\n\nexport interface IColumnDefinition {\n    id?: string;\n    name: string;\n    type: FieldType;\n    asyncPostRender?: (cellRef: string, row: number, dataContext: JSON, colDef: any) => void;\n    formatter?: (row: number, cell: any, value: any, columnDef: any, dataContext: any) => string;\n    isEditable?: boolean;\n}\n\nexport interface IGridColumnDefinition {\n    id: string;\n    type: number;\n}\n\nexport interface IGridDataRow {\n    row?: number;\n    values: any[];\n}\n"]}