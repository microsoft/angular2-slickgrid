{"version":3,"sources":["js/VirtualizedCollection.ts"],"names":[],"mappings":"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","file":"VirtualizedCollection.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { IObservableCollection, CollectionChange } from './interfaces';\r\n\r\nclass LoadCancellationToken {\r\n    isCancelled: boolean;\r\n}\r\n\r\nclass DataWindow<TData> {\r\n    private _dataSourceLength: number;\r\n    private _data: TData[];\r\n    private _length: number = 0;\r\n    private _offsetFromDataSource: number = -1;\r\n\r\n    private loadFunction: (offset: number, count: number) => Promise<TData[]>;\r\n    private lastLoadCancellationToken: LoadCancellationToken;\r\n    private loadCompleteCallback: (start: number, end: number) => void;\r\n    private placeholderItemGenerator: (index: number) => TData;\r\n\r\n    constructor(dataSourceLength: number,\r\n                loadFunction: (offset: number, count: number) => Promise<TData[]>,\r\n                placeholderItemGenerator: (index: number) => TData,\r\n                loadCompleteCallback: (start: number, end: number) => void) {\r\n        this._dataSourceLength = dataSourceLength;\r\n        this.loadFunction = loadFunction;\r\n        this.placeholderItemGenerator = placeholderItemGenerator;\r\n        this.loadCompleteCallback = loadCompleteCallback;\r\n    }\r\n\r\n    getStartIndex(): number {\r\n        return this._offsetFromDataSource;\r\n    }\r\n\r\n    getEndIndex(): number {\r\n        return this._offsetFromDataSource + this._length;\r\n    }\r\n\r\n    contains(dataSourceIndex: number): boolean {\r\n        return dataSourceIndex >= this.getStartIndex() && dataSourceIndex < this.getEndIndex();\r\n    }\r\n\r\n    getItem(index: number): TData {\r\n        if (!this._data) {\r\n            return this.placeholderItemGenerator(index);\r\n        }\r\n        return this._data[index - this._offsetFromDataSource];\r\n    }\r\n\r\n    positionWindow(offset: number, length: number): void {\r\n        this._offsetFromDataSource = offset;\r\n        this._length = length;\r\n        this._data = undefined;\r\n\r\n        if (this.lastLoadCancellationToken) {\r\n            this.lastLoadCancellationToken.isCancelled = true;\r\n        }\r\n\r\n        if (length === 0) {\r\n            return;\r\n        }\r\n\r\n        let cancellationToken = new LoadCancellationToken();\r\n        this.lastLoadCancellationToken = cancellationToken;\r\n        this.loadFunction(offset, length).then(data => {\r\n            if (!cancellationToken.isCancelled) {\r\n                this._data = data;\r\n                this.loadCompleteCallback(this._offsetFromDataSource, this._offsetFromDataSource + this._length);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport class VirtualizedCollection<TData> implements IObservableCollection<TData> {\r\n\r\n    private _length: number;\r\n    private _windowSize: number;\r\n    private _bufferWindowBefore: DataWindow<TData>;\r\n    private _window: DataWindow<TData>;\r\n    private _bufferWindowAfter: DataWindow<TData>;\r\n\r\n    private collectionChangedCallback: (change: CollectionChange, startIndex: number, count: number) => void;\r\n\r\n    constructor(windowSize: number,\r\n                length: number,\r\n                loadFn: (offset: number, count: number) => Promise<TData[]>,\r\n                private _placeHolderGenerator: (index: number) => TData) {\r\n        this._windowSize = windowSize;\r\n        this._length = length;\r\n\r\n        let loadCompleteCallback = (start: number, end: number) => {\r\n            if (this.collectionChangedCallback) {\r\n                this.collectionChangedCallback(CollectionChange.ItemsReplaced, start, end - start);\r\n            }\r\n        };\r\n\r\n        this._bufferWindowBefore = new DataWindow(length, loadFn, _placeHolderGenerator, loadCompleteCallback);\r\n        this._window = new DataWindow(length, loadFn, _placeHolderGenerator, loadCompleteCallback);\r\n        this._bufferWindowAfter = new DataWindow(length, loadFn, _placeHolderGenerator, loadCompleteCallback);\r\n    }\r\n\r\n    setCollectionChangedCallback(callback: (change: CollectionChange, startIndex: number, count: number) => void): void {\r\n        this.collectionChangedCallback = callback;\r\n    }\r\n\r\n    getLength(): number {\r\n        return this._length;\r\n    }\r\n\r\n    at(index: number): TData {\r\n        return this.getRange(index, index + 1)[0];\r\n    }\r\n\r\n    getRange(start: number, end: number): TData[] {\r\n\r\n        // current data may contain placeholders\r\n        let currentData = this.getRangeFromCurrent(start, end);\r\n\r\n        // only shift window and make promise of refreshed data in following condition:\r\n        if (start < this._bufferWindowBefore.getStartIndex() || end > this._bufferWindowAfter.getEndIndex()) {\r\n            // jump, reset\r\n            this.resetWindowsAroundIndex(start);\r\n        } else if (end <= this._bufferWindowBefore.getEndIndex()) {\r\n            // scroll up, shift up\r\n            let windowToRecycle = this._bufferWindowAfter;\r\n            this._bufferWindowAfter = this._window;\r\n            this._window = this._bufferWindowBefore;\r\n            this._bufferWindowBefore = windowToRecycle;\r\n            let newWindowOffset = Math.max(0, this._window.getStartIndex() - this._windowSize);\r\n\r\n            this._bufferWindowBefore.positionWindow(newWindowOffset, this._window.getStartIndex() - newWindowOffset);\r\n        } else if (start >= this._bufferWindowAfter.getStartIndex()) {\r\n            // scroll down, shift down\r\n            let windowToRecycle = this._bufferWindowBefore;\r\n            this._bufferWindowBefore = this._window;\r\n            this._window = this._bufferWindowAfter;\r\n            this._bufferWindowAfter = windowToRecycle;\r\n            let newWindowOffset = Math.min(this._window.getStartIndex() + this._windowSize, this._length);\r\n            let newWindowLength = Math.min(this._length - newWindowOffset, this._windowSize);\r\n\r\n            this._bufferWindowAfter.positionWindow(newWindowOffset, newWindowLength);\r\n        }\r\n\r\n        return currentData;\r\n    }\r\n\r\n    private getRangeFromCurrent(start: number, end: number): TData[] {\r\n        let currentData = [];\r\n        for (let i = 0; i < end - start; i++) {\r\n            currentData.push(this.getDataFromCurrent(start + i));\r\n        }\r\n\r\n        return currentData;\r\n    }\r\n\r\n    private getDataFromCurrent(index: number): TData {\r\n        if (this._bufferWindowBefore.contains(index)) {\r\n            return this._bufferWindowBefore.getItem(index);\r\n        } else if (this._bufferWindowAfter.contains(index)) {\r\n            return this._bufferWindowAfter.getItem(index);\r\n        } else if (this._window.contains(index)) {\r\n            return this._window.getItem(index);\r\n        }\r\n\r\n        return this._placeHolderGenerator(index);\r\n    }\r\n\r\n    private resetWindowsAroundIndex(index: number): void {\r\n\r\n        let bufferWindowBeforeStart = Math.max(0, index - this._windowSize * 1.5);\r\n        let bufferWindowBeforeEnd = Math.max(0, index - this._windowSize / 2);\r\n        this._bufferWindowBefore.positionWindow(bufferWindowBeforeStart, bufferWindowBeforeEnd - bufferWindowBeforeStart);\r\n\r\n        let mainWindowStart = bufferWindowBeforeEnd;\r\n        let mainWindowEnd = Math.min(mainWindowStart + this._windowSize, this._length);\r\n        this._window.positionWindow(mainWindowStart, mainWindowEnd - mainWindowStart);\r\n\r\n        let bufferWindowAfterStart = mainWindowEnd;\r\n        let bufferWindowAfterEnd = Math.min(bufferWindowAfterStart + this._windowSize, this._length);\r\n        this._bufferWindowAfter.positionWindow(bufferWindowAfterStart, bufferWindowAfterEnd - bufferWindowAfterStart);\r\n    }\r\n}\r\n"]}